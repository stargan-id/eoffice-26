services:
  postgres:
    image: postgres:16-alpine
    container_name: ${POSTGRES_CONTAINER_NAME:-myapp-postgres}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-myapp_db}
      POSTGRES_USER: ${POSTGRES_USER:-myapp_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      # - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - myapp_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-myapp_user} -d ${POSTGRES_DB:-myapp_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailpit for email testing
  mailpit:
    image: axllent/mailpit:latest
    container_name: ${MAILPIT_CONTAINER_NAME:-myapp-mailpit}
    restart: unless-stopped
    ports:
      - "${MAILPIT_WEB_PORT:-8025}:8025"    # Web interface
      - "${MAILPIT_SMTP_PORT:-1025}:1025"   # SMTP server
    environment:
      MP_MAX_MESSAGES: ${MAILPIT_MAX_MESSAGES:-5000}
      MP_DATABASE: ${MAILPIT_DATABASE:-/data/mailpit.db}
      MP_SMTP_AUTH_ACCEPT_ANY: ${MAILPIT_SMTP_AUTH:-1}
      MP_SMTP_AUTH_ALLOW_INSECURE: ${MAILPIT_SMTP_INSECURE:-1}
    volumes:
      - mailpit_data:/data
    networks:
      - myapp_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8025/api/v1/info"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  mailpit_data:
    driver: local

networks:
  myapp_network:
    driver: bridge